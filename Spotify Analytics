# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#Then I inserted the Spotify Data .csv into the table.
#Next, I explored the data using the following SQL. 


#Finding out what is the avg popularity, danceability, & valence by artist/track

Select artist_name, track_name,
avg(popularity),
avg(danceability),
avg(valence)
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name;


#Which of the artist and track is the most popular on Spotify?

Select artist_name, track_name, MAX(popularity) AS popular_on_spotify
From BIT_DB.Spotifydata
Group By artist_name, track_name
Order By popular_on_spotify DESC
LIMIT 20;


#Which of the artist & track on Spotify's audio features is the most marketable and attentive to the audiences ear?

Select artist_name, track_name, acousticness, 
COUNT(DISTINCT track_id) AS popular_audio
From BIT_DB.Spotifydata
Group By acousticness, artist_name, track_name
Order By popular_audio DESC
LIMIT 10;

#Which songs that Spotify plays on their site is popular with the audience?

SELECT
    artist_name,
    track_name,
    popularity,
    tempo,
    energy
FROM
    BIT_DB.Spotifydata
GROUP BY
    artist_name,
    track_name,
    popularity,
    tempo,
    energy
ORDER BY
    artist_name DESC
LIMIT 25;


#Calculate the average popularity for the artists in the Spotify data table. 
#Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.

WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name,
        average_popularity,
        'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
